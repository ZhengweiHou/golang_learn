// Code generated by ent, DO NOT EDIT.

package hzw

import (
	"entgo.io/ent/dialect/sql"
	"github.com/google/uuid"
)

const (
	// Label holds the string label denoting the hzw type in the database.
	Label = "hzw"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "HZW_ID"
	// FieldStuNo holds the string denoting the stuno field in the database.
	FieldStuNo = "STU_NO"
	// FieldName holds the string denoting the name field in the database.
	FieldName = "NAME"
	// FieldAge holds the string denoting the age field in the database.
	FieldAge = "AGE"
	// FieldVersion holds the string denoting the version field in the database.
	FieldVersion = "VERSION"
	// Table holds the table name of the hzw in the database.
	Table = "hzw"
)

// Columns holds all SQL columns for hzw fields.
var Columns = []string{
	FieldID,
	FieldStuNo,
	FieldName,
	FieldAge,
	FieldVersion,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultVersion holds the default value on creation for the "version" field.
	DefaultVersion int32
	// DefaultID holds the default value on creation for the "id" field.
	DefaultID func() uuid.UUID
)

// OrderOption defines the ordering options for the Hzw queries.
type OrderOption func(*sql.Selector)

// ByID orders the results by the id field.
func ByID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldID, opts...).ToFunc()
}

// ByStuNo orders the results by the stuNo field.
func ByStuNo(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldStuNo, opts...).ToFunc()
}

// ByName orders the results by the name field.
func ByName(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldName, opts...).ToFunc()
}

// ByAge orders the results by the age field.
func ByAge(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldAge, opts...).ToFunc()
}

// ByVersion orders the results by the version field.
func ByVersion(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldVersion, opts...).ToFunc()
}
