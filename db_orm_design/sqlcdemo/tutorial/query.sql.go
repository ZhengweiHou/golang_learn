// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.28.0
// source: query.sql

package tutorial

import (
	"context"
)

const getStudentById = `-- name: GetStudentById :one
SELECT id, student_no, name, age FROM students WHERE id=? LIMIT 1
`

func (q *Queries) GetStudentById(ctx context.Context, id int64) (Student, error) {
	row := q.db.QueryRowContext(ctx, getStudentById, id)
	var i Student
	err := row.Scan(
		&i.ID,
		&i.StudentNo,
		&i.Name,
		&i.Age,
	)
	return i, err
}

const getStudentLikeNo = `-- name: GetStudentLikeNo :one
SELECT id, student_no, name, age FROM students WHERE student_no like ?
`

func (q *Queries) GetStudentLikeNo(ctx context.Context, studentNo string) (Student, error) {
	row := q.db.QueryRowContext(ctx, getStudentLikeNo, studentNo)
	var i Student
	err := row.Scan(
		&i.ID,
		&i.StudentNo,
		&i.Name,
		&i.Age,
	)
	return i, err
}

const getUsers = `-- name: GetUsers :one
SELECT id, name FROM users WHERE id=? LIMIT 1
`

func (q *Queries) GetUsers(ctx context.Context, id int32) (User, error) {
	row := q.db.QueryRowContext(ctx, getUsers, id)
	var i User
	err := row.Scan(&i.ID, &i.Name)
	return i, err
}
