// Code generated by aic-ent, DO NOT EDIT
// Code generated by aic-ent, DO NOT EDIT
// Code generated by aic-ent, DO NOT EDIT

package dao
import (
    "context"
    "gormdemo/model"
)

type StudentDao struct{
}

// insert one data 
func (dao *StudentDao) InsertOne(ctx *context.Context,arg *model.Student)(int64,error){
    result:=globaldb.Create(arg)
    return result.RowsAffected, result.Error
}

// query by primaryKey
func (dao *StudentDao) FindByPrimaryKey(ctx *context.Context,arg *model.Student)(*model.Student,error){
   findRes :=&model.Student{}
   result:=globaldb.Where("ID = ?",arg.Id).Find(findRes)
   return findRes,result.Error
}

// update by primaryKey
func (dao *StudentDao) UpdateByPrimaryKey(ctx *context.Context,arg *model.Student)(int64,error){
      result:=globaldb.Save(arg)
      return result.RowsAffected, result.Error
}

// delete by primaryKey
func (dao *StudentDao) DeleteByPrimaryKey(ctx *context.Context,arg *model.Student)(int64,error){
      result:=globaldb.Delete(arg)
      return result.RowsAffected, result.Error
}
func (dao *StudentDao) FindByName (ctx *context.Context,arg model.FindByNameArg) ([]model.Student,error){
    var list []model.Student
    result:=globaldb.Raw("SELECT * FROM STUDENT WHERE NAME = @Name",arg).Find(&list)
    return list,result.Error
}
