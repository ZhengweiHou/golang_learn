@startuml
namespace 基本类定义 {
    ' 基本类定义
    class 类名 {
      ' 字段(属性)
      -私有字段: 类型
      #受保护字段: 类型
      ~包私有字段: 类型
      +公有字段: 类型

      ' 方法
      +公有方法()
      #受保护方法()
      -私有方法()
      ~包私有方法()
    }

    ' 抽象类
    abstract class 抽象类 {
      +抽象方法() {abstract}
    }

    ' 接口
    interface 接口 {
      +接口方法()
    }

    class 范型类<T> {
      +添加元素(element: T)
      +获取元素(): T
    }


    package com.example {
      class C1
      class 用户
    }


    enum 枚举 {
      星期一
      星期二
      星期三
    }

    annotation 注解
}

namespace 继承泛化 {
   '继承
    父类 <|-- 具体子类
    接口 <|.. 实现类

}
namespace 关联 {
    ' 双向关联
    类A -- 类B
    类A1 <--> 类B1

    ' 单向关联
    类C --> 类D

    ' 带标签的关联
    类E "角色名" -- "1" 类F
}
namespace 聚合 {
    ' 空心菱形表示聚合
    公司 o-- 员工
}

namespace 组合 {
    ' 实心菱形表示组合
    汽车 *-- 发动机
}

namespace 依赖 {
    ' 虚线箭头表示依赖
    控制器 ..> 服务类 : <<use>>
}

namespace 关系基数表示 {
    ' 一对一关系
    学生 "1" -- "1" 学籍

    ' 一对多关系
    班级 "1" -- "n" 学生

    ' 多对多关系
    学生 "n" -- "m" 课程

    ' 可选关系 (0或1)
    用户 "0..1" -- "1..*" 订单
}

namespace 关系标签 {
    a -- b : "关联描述"
    c ..> d : <<create>> 
    e --> f : "1..*" 
}
@enduml

