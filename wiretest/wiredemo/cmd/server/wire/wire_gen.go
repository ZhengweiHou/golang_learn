// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package wire

import (
	"aic.com/pkg/aicgormdb"
	"github.com/google/wire"
	"github.com/spf13/viper"
	"log/slog"
	"wiredemo/internal/adapter/adapterhttp"
	"wiredemo/internal/adapter/adapterkitex"
	"wiredemo/internal/repository/dao"
	"wiredemo/internal/server/http"
	"wiredemo/internal/server/kitex"
	"wiredemo/internal/service"
	"wiredemo/pkg/app"
	"wiredemo/pkg/log"
	http2 "wiredemo/pkg/server/http"
	kitex2 "wiredemo/pkg/server/kitex"
)

// Injectors from wire.go:

// wire 整合构建
// func NewWire(*viper.Viper, *log.Logger) (*app.App, func(), error) {
func NewWire(viperViper *viper.Viper) (*app.App, func(), error) {
	logger := log.NewZapLog(viperViper)
	zapHandler := log.NewZapHandler(logger)
	slogLogger := log.NewZapSlog(zapHandler)
	loggerInterface := aicgormdb.NewZapGormLog(logger)
	db := aicgormdb.NewDB(viperViper, loggerInterface)
	repository := aicgormdb.NewRepository(slogLogger, db)
	transactionManager := aicgormdb.NewTransactionManager(repository)
	baseService := service.NewService(transactionManager, slogLogger)
	iHzwDao := dao.NewHzwDao(repository)
	iHzwService := service.NewHzwService(baseService, iHzwDao)
	hzwController := adapterhttp.NewHzwController(iHzwService)
	iHzw2Dao := dao.NewHzw2Dao(repository)
	iHzw2Service := service.NewHzw2Service(baseService, iHzw2Dao)
	hzw2Controller := adapterhttp.NewHzw2Controller(iHzw2Service)
	server := http.NewHTTPServer(slogLogger, viperViper, hzwController, hzw2Controller)
	serverServer := kitex.NewKitexOriginalServer(slogLogger, viperViper)
	hzwKCReporter := kitex2.NewHzwKCReporter()
	hzwService := adapterkitex.NewHzwKitexCtl(iHzwService)
	kitexServer := kitex.NewKitexServer(serverServer, slogLogger, hzwKCReporter, hzwService)
	appApp, cleanup := newApp(server, kitexServer, slogLogger)
	return appApp, func() {
		cleanup()
	}, nil
}

// wire.go:

// 应用服务器实现
var HttpServerSet = wire.NewSet(http.NewHTTPServer)

// KitexServerSet Kitex服务相关provider
var KitexServerSet = wire.NewSet(kitex.NewKitexOriginalServer, kitex.NewKitexServer, kitex2.NewHzwKCReporter)

// http 处理器
var AdapterhttpSet = wire.NewSet(adapterhttp.NewHzwController, adapterhttp.NewHzw2Controller)

// AsapterKitexSet kitex处理器
var AdapterkitexSet = wire.NewSet(adapterkitex.NewHzwKitexCtl)

// 业务服务
var ServiceSet = wire.NewSet(service.NewService, service.NewHzwService, service.NewHzw2Service)

// build App
func newApp(
	httpServer *http2.Server,
	kitexServer *kitex2.Server,

	logger *slog.Logger,
) (*app.App, func()) {
	return app.NewApp(app.WithServer(
		httpServer,
		kitexServer,
	), app.WithName("wiredemo-server"), app.WithLogger(logger),
	)
}
